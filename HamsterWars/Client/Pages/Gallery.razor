@page "/gallery"
@using HamsterWars.Shared.Models
@inject IHamsterService HamsterService
@inject NavigationManager NavigationManager

<head>
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Pacifico&family=Raleway&display=swap" rel="stylesheet">
</head>

<h2 class="gallery">Gallery</h2>
<div class="d-flex justify-content-center">
    <button type="button" class="btn btn-primary createNewBtn" onclick="@CreateHamster">Create new hamster!</button>
</div>

@if (this.HamsterService.Hamsters.Count == 0)
  {
    <div class="e-error">
       <div class="e-error-content">No hamster found in the database.Try to add some Hamsters!</div>
    </div>
}
else
{
    <div class="row row-cols-1 row-cols-lg-3 g-4">
    @foreach (var card in HamsterService.Hamsters)
    {
        <div class="col">
        <div id="f1_container">
            <div id="f1_card" class="shadow">
                <div class="front face" style="background-image:url(images/hamsterImg/@card.ImgName)">
                    
                </div>
                <div class="back face center">
                <h4 class="card-title">@card.Name</h4>
                 <p class="card-text">Age: @card.Age
                     <br /> Favorite food: @card.FavFood
                     <br /> Loves: @card.Loves
                     <br /> Wins: @card.Wins
                     <br /> Losses: @card.Losses
                     <br /> Total Games: @card.Games
                 </p>
                  <ul class="list-inline">
                                        <li class="list-inline-item">
                                         <button type="submit" class="btn btn-danger" @onclick="() => DeleteHamster(card.Id)">Delete  </button>
                                     </li>
                                     
                                    </ul>
                </div>
            </div>
        </div>
        </div>

        
     }
     
     </div>
  
}

@code {
    protected string Message = string.Empty;  
    protected string StatusClass = string.Empty;  
    protected bool Saved;

    

    protected override async Task OnInitializedAsync()
    {
        await HamsterService.GetHamsters();
    }

    void CreateHamster()
    {
        NavigationManager.NavigateTo($"hamster");
    }
    
 
    protected async Task DeleteHamster(int id) {  
        await HamsterService.DeleteHamster(id);
        await HamsterService.GetHamsters();

    } 
    
    

}
