@page "/hamster"
@page "/edit/hamster/{id:int}"

@using HamsterWars.Shared.Models
@inject IHamsterService HamsterService


@if(Id == null)
{
    <PageTitle>Create a new hamster</PageTitle>
    <h3>Create a new hamster</h3>

}
else
{
    <PageTitle>Edit @hamster.Name</PageTitle>
    <h3>Edit @hamster.Name</h3>

}

<EditForm Model="@hamster" OnValidSubmit="HandleSubmit">
                     <div class="form-group">  
                        <label for="Name">Name: </label>  
                        <InputText id="Name" class="form-control" @bind-Value="@hamster.Name" placeholder="Enter hamsters name"></InputText>  
                    </div>
                 
                    <div class="form-group">  
                        <label for="Age">Age: </label>  
                        <InputNumber id="Age" class="form-control" @bind-Value="@hamster.Age" placeholder="Enter hamsters age"></InputNumber>  
                    </div>
                    <div class="form-group">  
                        <label for="favFood">Favorite food: </label>  
                        <InputText id="favFood" class="form-control" @bind-Value="@hamster.FavFood" placeholder="Enter favorite food"></InputText>  
                    </div> 
                    <div class="form-group">  
                        <label for="loves">Loves: </label>  
                        <InputText id="loves" class="form-control" @bind-Value="@hamster.Loves" placeholder="Enter what hamster loves"></InputText>  
                    </div
                    <div class="form-group">
                        <label for="imgName">Image: </label>
                        <InputText id="imgName" class="form-control" @bind-Value="hamster.ImgName" placeholder="Choose an image "></InputText>
                    </div>
                     <div class="form-group">
                        <label for="Wins">Wins: </label>
                        <InputNumber id="Wins" readonly class="form-control" @bind-Value="hamster.Wins" placeholder="Total Wins "></InputNumber>
                    </div> 
                    <div class="form-group">
                        <label for="Losses">Losses: </label>
                        <InputNumber id="Losses" readonly class="form-control" @bind-Value="hamster.Losses" placeholder="Total Losses "></InputNumber>
                    </div> 
                    <div class="form-group">
                        <label for="games">Total number of battles: </label>
                        <InputNumber id="games" readonly class="form-control" @bind-Value="hamster.Games" ></InputNumber>
                    </div>
                   @* <div class="endFormButtons">
                        <button type="button" class="btn btn-secondary" @onclick="BackToGallery" >Cancel</button> 
                        <button type="submit" class="btn btn-primary">@btnText</button>
                     @if (Id != null)
                        {
                          <button type="button" class="btn btn-danger" @onclick="()=> DeleteHero(hamster.Id))">Delete @hamster.Name </button>
                      }
                    </div>*@
</EditForm>



@code {
    [Parameter]
    public int? Id { get; set; }

    Hamster hamster = new();

    string btnText = string.Empty;

     protected override async Task OnInitializedAsync()
    {
        btnText = Id == null ? "Save New Hamster" : "Update hamster";

    }

    protected override async Task OnParametersSetAsync()
    {
        if(Id == null)
        {


        }
        else
        {
            hamster = await HamsterService.GetSingleHamster((int)Id);
        }
    }

     async Task HandleSubmit()
    {
        if(Id == null)
        {
            await HamsterService.CreateNewHamster(hamster);
        }
        else
        {
            await HamsterService.UpdateHamster(hamster);
        }

    }
  

}
