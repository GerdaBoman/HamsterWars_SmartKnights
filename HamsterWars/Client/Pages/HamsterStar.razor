@page "/star"
@using HamsterWars.Shared.Entity
@inject IHamsterService hamsterService


<div class="text-center ">
    <h3 class="starIntro">A random star to brighten your day!</h3>
    <a class="btn btn-primary randomButton" @onclick=@PickNewHamster><span class="oi oi-star"></span> Meet another star!</a>
</div>
@if (newHamster != null)
{
    <div class="HamsterView">
        <div class="row">
        <div class="imgContainer col ">
            <img class="photo" src='images/hamsterImg/@newHamster.ImgName' alt="@newHamster.Name" >
        </div>
        <div class="infoContainer col">
            <h2><span class="starName">Name</span>: @newHamster.Name</h2>
            <hr>
            <h5><br>Age : @newHamster.Age</h5>
            <h5><br>Favorite food: @newHamster.FavFood</h5>
            <h5><br>Loves: @newHamster.Loves</h5>
            <h5><br>Total Wins: @newHamster.Wins</h5>
            <h5><br>Total Losses: @newHamster.Losses</h5>
            <h5><br>Total Battles: @newHamster.Games</h5>

        </div>
        <div class="deleteContainer text-center">
            <h2 class="deleteIntro">Think this hamster is not worthy of being part of these amazing hamster?</h2>
            <h5>Press delete!</h5>
            <br>
            <button type="submit" class="btn btn-danger deleteBtn" @onclick="() => DeleteHamster(newHamster.Id)"><span class="oi oi-delete"></span> Delete @newHamster.Name</button>

        </div>
       </div>
    </div>
}
else
{
    <h2>No hamsters has found in the library! Please add a hamster through "Join the fun" page!</h2>
}

@code {
    Hamster newHamster = new Hamster();

    protected override async Task OnInitializedAsync()
    {
        newHamster = await hamsterService.GetRandomHamster();

    }

    private async Task PickNewHamster()
    {
        newHamster = await hamsterService.GetRandomHamster();
        StateHasChanged();
    }

    

    protected async Task DeleteHamster(int id) { 
        await hamsterService.DeleteHamster(id);
        await PickNewHamster();
        StateHasChanged();
    }
}
